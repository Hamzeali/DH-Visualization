{
    "language": "English",
    "skip": "Skip",
    "errorTitel": "Error",
    "primeNumberErrorMessage": "(n) must be prime number!",
    "primitiveRootErrorMessage": "(r) must be primitive root of (n)!",
    "emptyErrorMessage": "Empty values are not accepted!",
    "doneTitel": "Done",
    "correctMessage": "The values have been set.",
    "settings": "Settings",
    "animationSpeed": "Animation Speed",
    "appLanguage": "Language",
    "zoomEnable": "Zoom Enable",
    "secretBob": "Secret (Bob)",
    "secretAlice": "Secret (Alice)",
    "cancel": "Cancel",
    "introStart": "Start the Introduction",
    "aliceIntro": "Hi! I am Alice.",
    "bobIntro": "And I am Bob.",
    "eveIntro": "And here is Eve.",
    "appDesc": "In this app we will explain you how DHKE works.",
    "appDesc2": "The application consists of 4 scenes.",
    "firstScene": "The first scene will explain you the basic idea of DHKE using colors.",
    "secondScene": "The second one will give you some mathematical basics about the root of prime number and the discrete logarithm problem.",
    "thirdScene": "The third one will explain DHKE with numbers, where you can use your own values as well :)",
    "fourthScene": "The fourth one will show you how MitM-Attack on DHKE can be happened.",
    "sceneStart1": "So let's start the scenes...",

    "about0": "What is DHKE?",
    "about1": "- The idea of Diffie-Hellman:",
    "about2": "Diffie-Hellman (",
    "about3": "for short) is a protocol that allows two parties to communicate securely with each other over insecure channel (such as the internet). The main idea of (DH) is about generating and exchanging keys between two parties, and with a mathematical algorithm they can generate.a secret key that helps them to encrypt and decrypt the message.",
    "about4": "is not a new protocol where it was invented by 'Whitfeld Diffie' and 'Martin Hellman' in 1976.",
    "about5": "DH can generate the secret key but can not encrypt or decrypt data.",
    "about6": "- Diffie-Hellman Protocol:",
    "about7": "Let's consider the scenario. ",
    "about8": "Alice and Bob want to send secure messages to each other over the internet, and in the middle there is Eve, who will try to read the messages:",
    "about9": "- Alice selects a multiplicative group ",
    "about10": "and a primitive root ",
    "about11": ", where ",
    "about12": "must be ",
    "about13": "prime ",
    "about14": "number.",
    "about15": "- Alice shares these two numbers over the internet with Bob. Sharing of (",
    "about16": "and ",
    "about17": ") will be in public so Eve can get them as well.",
    "about18": "- Alice will choose her secret number ",
    "about19": " and keep it for herself. Then Alice will calculate a new number ",
    "about20": "(Alice's public number) through the following formula and share it with Bob:",
    "about21": "- Bob will do same process. He will choose his secret number ",
    "about22": " and keep it for himself. Bob will calculate a new number ",
    "about23": "(Bob's public number) through the a similar formula and share it with Alice:",
    "about24": "will be public and Eve can get the value of each.",
    "about25": "- Now Alice and Bob will generate the shared secret number ",
    "about26": "which will be used in the encryption and decryption process. The formula for generating the key is as follows:",
    "about27": "For Alice: ",
    "about28": "For Bob: ",
    "about29": "The secret number ",
    "about30": "will not be shared, so only Alice and Bob will have it, Eve will not.",

    "introduction": "Introduction",
    "intro0": "- What is primitive root of prime number?",
    "intro1": "• A primitive root ",
    "intro2": " is a primitive root modulo ",
    "intro3": " if every number coprime to ",
    "intro4": " is congruent to a power of ",
    "intro5": " modulo ",
    "intro6": "• In other words we can call ",
    "intro7": " primitive root of the prime number ",
    "intro8": " if ",
    "intro9": " are distinct.",
    "intro10": "-> Example: ",
    "intro11": "Let's assume that, ",
    "intro12": " and ",
    "intro13": "   After calculating the modulus, we get:",
    "intro14": "    As we see, all results are ",
    "intro15": "dstinct",
    "intro16": ", so we can say that ",
    "intro17": " is a primitive root of the prime number",
    "intro18": "",
    "intro19": "- Discrete Logarithm Problem:",
    "intro20": " • In a finite group, the discrete logarithm is hard to compute. Thus, the ",
    "intro21": "exponential function",
    "intro22": " is a ",
    "intro23": "one-way function.",
    "intro24": " • But what is one-way function?",
    "intro25": "   -> Assuming that we have data",
    "intro26": ". it is easy to calculate",
    "intro27": ". But it is very difficult to compute its inverse function.",
    "intro28": "Let's take: ",
    "intro29": "   Computing ",
    "intro30": " is easy, but when we want to compute the inverse function, it will be really hard.",
    "intro31": " In other words, if we have ",
    "intro32": ", it will be very hard to know the value of ",
    "intro33": ". Where ",
    "intro34": " can be ",
    "intro35": "etc",

    "dhke": "What is DHKE?",
    "readDHKE": "Read about DHKE?",
    "yes": "Yes",
    "no": "No",

    "showCase0": "Go one step forward.",
    "showCase1": "Go one step backward.",
    "showCase2": "Show or hide the description box.",
    "showCase3": "Change the settings of the application.",
    "showCase4": "Reset the scene and start from the beginning.",
    "showCase5": "Let the app move in automatic mode.",
    "showCase6": "It has three buttons inside it.",
    "showCase7": "Step number. You can press this number and write the step you would like to go to.",
    "showCase8": "In this box you will see some explanations about what happens on the screen.(You can maximize or minimize the box with long press)",

    "outOfRangeError": "Please enter a valid number.",
    "goToStep": "Go to step number:",

    "lastLeft": "Nothing's more to display!",
    "lastLeft2": "Nothing's more to display! Do you want to switch to the previous scene?",
    "lastRight": "Nothing's more to display! Do you want to switch to the next scene?",
    "lastRight2": "Nothing's more to display! Do you want to go back to the first scene?",

    "sceneStart2": "Start the scenes",
    "slide1": "Basic Idea of DHKE",
    "slide2": "Some Mathematical basics",
    "slide3": "How does the DHKE work?",
    "slide4": "MitM Attack on DHKE",
    "text1": "The basic idea can be shown with colors (later we will see how it works with numbers)",
    "text2": "Multiplicative group of integers modulo n\n",
    "text31": "This time with numbers – with small numbers; DHKE clearly uses big numbers",
    "text321": "Alice selects a multiplicative group: n = ",
    "text322": "and a primitive root r = ",
    "text4": "Man in the middle attack on DHKE; Eve will try to block the key exchange between Alice and Bob",
    "slide1Item0": "Alice thinks about her first color, which is yellow.",
    "slide1Item1": "When Alice tells Bob about her first color, Eve can listen to her and so she also knows the color.",
    "slide1Item2": "To prevent Eve from listening again, Alice will think about another color (red) and Bob also will think about another color (turquoise).",
    "slide1Item3": "Alice and Bob  mix Alice's first color (yellow) with the colors, they respectively thought about the second time. Now Alice and Bob, both have a new mixed color (Alice has orange, Bob has blue).",
    "slide1Item4": "Alice sends her mixed color (orange) to Bob, and Bob sends his mixed color (blue) to Alice. Eve can know the mixed color of both, but not the actual color.",
    "slide1Item5": "Alice will mix Bob's mixed color (blue) with her second color (red). Bob will do the same, he mixes Alice's mixed color (orange) with his second color (blue).",
    "slide1Item6": "Now Alice and Bob have the same result color which is (dark green), where Eve does not have any idea about it.\nTransferred to the upcoming DHKE, Alice and Bob now share a secret (the result color) that Eve has no idea about, although she was able to record everything the both communicated about.",
    "slide3Item0": "Alice chooses the multiplicative group Z_n_* (). And a primitive root (r).",
    "slide3Item1": "Alice shares n and r with Bob. Eve will know the selected numbers.",
    "slide3Item2": "Alice selects her secret number (s_A). Bob also selects his secret number (S_B). The secret numbers will not be exchanged!!",
    "slide3Item3": "Now Alice and Bob generate their public key ('a' for Alice and 'b' for Bob) with the help of the formula that's shown on the screen.",
    "slide3Item4": "Alice and Bob exchange the values of their public keys (a and b). Eve can know these two values.",
    "slide3Item5": "Now Alice and Bob generate the shared secret key (S) - using the formulas shown on the screen.",
    "slide4Item0": "Alice selects her secret number (s_A).",
    "slide4Item1": "Alice generates her public key (a) with the help of the formula that's shown on the screen.",
    "slide4Item2": "Now Alice wants to share her public key (a) with Bob. Eve blocks the transmission of Alice's public key and keeps it for herself without Alice or Bob noticing that.",
    "slide4Item3": "Eve selects her first secret number (s_EA).",
    "slide4Item4": "Eve generates her public key (ea) with the help of the formula shown on the screen.",
    "slide4Item5": "Now Eve shares her public key (ea) with Alice. Alice will think that this public key is coming from Bob.",
    "slide4Item6": "Now Alice and Eve generate the secret key (S1) with the help of the formulas shown on the screen.",
    "slide4Item7": "Bob selects his secret number (s_B).",
    "slide4Item8": "Bob generates his public key (b) with the help of the formula that's shown on the screen.",
    "slide4Item9": "Now Bob shares his public key (b) with Alice. Eve blocks the transmission of Bob's public key and keeps it for herself without letting Alice or Bob notice that.",
    "slide4Item10": "Eve selects her second secret number (s_EB).",
    "slide4Item11": "Eve generates her public key (eb) with the help of the formula shown on the screen.",
    "slide4Item12": "Now Eve shares her public key (eb) with Bob. Bob will think that this public key is coming from Alice.",
    "slide4Item13": "Now Bob and Eve generate the secret key (S2) with the help of the formulas shown on the screen.",
    "slide4Item14": "If Eve manages to continue to stop direct communication between Alice and Bob, and channel it through her, she will be able to read all communication."
}
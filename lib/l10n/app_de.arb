{
    "language": "Deutsch",
    "skip": "Überspringen",
    "errorTitel": "Fehler",
    "primeNumberErrorMessage": "(n) muss eine Primzahl sein!",
    "primitiveRootErrorMessage": "(r) muss primitve Wurzel von (n) sein!",
    "emptyErrorMessage": "Leere Werte sind nicht erlaubt.",
    "doneTitel": "Erledigt",
    "correctMessage": "Die Werte sind gesetzt.",
    "settings": "Einstellungen",
    "animationSpeed": "Animation-Geschwindigkeit",
    "appLanguage": "Sprache ",
    "zoomEnable": "Zoom Aktivieren",
    "secretBob": "Geheim (Bob)",
    "secretAlice": "Geheim (Alice)",
    "cancel": "Abbrechen",
    "introStart": "Starten Sie die Einführung",
    "aliceIntro": "Hi! Ich bin Alice.",
    "bobIntro": "Und ich bin Bob.",
    "eveIntro": "Und hier ist Eve.",
    "appDesc": "In dieser App erklären wir Ihnen, wie DHKE funktioniert.",
    "appDesc2": "Die Anwendung besteht aus 4 Szenen.",
    "firstScene": "Die erste Szene erklärt Ihnen die Grundidee von DHKE unter Verwendung von Farben.",
    "secondScene": "Die zweite gibt Ihnen einige mathematische Grundlagen über die Wurzel der Primzahl und das Problem des diskreten Logarithmus.",
    "thirdScene": "Die dritte erklärt DHKE mit Zahlen, wobei Sie auch Ihre eigenen Werte verwenden können :)",
    "fourthScene": "Die vierte zeigt Ihnen, wie ein MitM-Angriff auf DHKE passieren kann.",
    "sceneStart1": "Beginnen wir also mit den Szenen...",
    "sceneStart2": "Szenen starten",

    "about0": "Was ist DHKE?",
    "about1": "- Die Idee von Diffie-Hellman:",
    "about2": "Diffie-Hellman (kurz ",
    "about3": ") ist ein Protokoll, das es zwei Parteien ermöglicht, über unsichere Kanäle (wie das Internet) sicher miteinander zu kommunizieren. Die Hauptidee von (DH) besteht darin, Schlüssel zwischen zwei Parteien zu generieren und auszutauschen, und mit einem mathematischen Algorithmus können sie einen geheimen Schlüssel generieren, der ihnen hilft, die Nachricht zu verschlüsseln und zu entschlüsseln.",
    "about4": "ist kein neues Protokoll, da es 1976 von 'Whitfeld Diffie' und 'Martin Hellman' erfunden wurde.",
    "about5": "DH kann den geheimen Schlüssel generieren, aber keine Daten verschlüsseln oder entschlüsseln.",
    "about6": "- Diffie-Hellman-Protokoll:",
    "about7": "Betrachten wir das Szenario. ",
    "about8": "Alice und Bob wollen sich gegenseitig sichere Nachrichten über das Internet schicken, und in der Mitte steht Eve, die versuchen wird, die Nachrichten zu lesen:",
    "about9": "- Alice wählt eine multiplikative Gruppe ",
    "about10": "und eine primitive Wurzel ",
    "about11": "aus, wobei ",
    "about12": "",
    "about13": "Primezahl ",
    "about14": "sein muss.",
    "about15": "- Alice teilt diese beiden Nummern über das Internet mit Bob. Das Teilen von (",
    "about16": "und ",
    "about17": ") wird öffentlich sein, damit Eve sie auch bekommen kann.",
    "about18": "- Alice wählt ihre Geheimzahl ",
    "about19": " und behält sie für sich. Dann berechnet Alice eine neue Zahl ",
    "about20": "(Alice's öffentliche Zahl) durch die folgende Formel und teilt sie Bob mit:",
    "about21": "- Bob wird denselben Prozess durchführen. Er wählt seine Geheimzahl ",
    "about22": " und behält sie für sich. Bob berechnet eine neue Zahl ",
    "about23": "(Bob's öffentliche Zahl) durch eine ähnliche Formel und teilt sie Alice mit:",
    "about24": "werden öffentlich sein und Eve kann den Wert von jedem bekommen.",
    "about25": "- Jetzt generieren Alice und Bob die gemeinsame Geheimzahl ",
    "about26": "die im Verschlüsselungs- und Entschlüsselungsprozess verwendet wird. Die Formel zum Generieren des Schlüssels lautet wie folgt:",
    "about27": "Für Alice: ",
    "about28": "Für Bob: ",
    "about29": "Die Geheimzahl ",
    "about30": "wird nicht geteilt, also nur Alice und Bob werden sie haben, Eve nicht.",

    "introduction": "Einführung",
    "intro0": "- Was ist die primitive Wurzel der Primzahl?",
    "intro1": "• Eine Primitivwurzel ",
    "intro2": " ist eine Primitivwurzel modulo ",
    "intro3": " wenn jede teilerfremde Zahl zu ",
    "intro4": " kongruent ist zu einer Potenz von ",
    "intro5": " modulo ",
    "intro6": "• Mit anderen Worten können wir ",
    "intro7": " Primitivwurzel der Primzahl ",
    "intro8": " nennen, wenn ",
    "intro9": " verschieden sind.",
    "intro10": "-> Beispiel: ",
    "intro11": "Nehmen wir an, ",
    "intro12": " und ",
    "intro13": "   Nach Berechnung des Moduls erhalten wir:",
    "intro14": "    Wie wir sehen, sind alle Ergebnisse ",
    "intro15": "verschieden",
    "intro16": ", also können wir sagen, dass ",
    "intro17": " eine primitive Wurzel der Primzahl ",
    "intro18": " ist",
    "intro19": "- Problem des diskreten Logarithmus:",
    "intro20": " • In einer endlichen Gruppe ist der diskrete Logarithmus schwer zu berechnen. Die ",
    "intro21": "Exponentialfunktion",
    "intro22": " ist also eine ",
    "intro23": "Einwegfunktion.",
    "intro24": " • Aber was ist eine Einwegfunktion?",
    "intro25": "   -> Angenommen, wir haben Daten",
    "intro26": ". es ist einfach ",
    "intro27": " zu berechnen. Aber es ist sehr schwierig, ihre Umkehrfunktion zu berechnen.",
    "intro28": "Nehmen wir an: ",
    "intro29": "   ",
    "intro30": " zu berechnen ist einfach, aber wenn wir die Umkehrfunktion berechnen wollen, wird es wirklich schwierig.",
    "intro31": " Mit anderen Worten, wenn wir ",
    "intro32": " haben, wird es sehr schwierig sein, den Wert von ",
    "intro33": " zu bestimmen. Where ",
    "intro34": " can be ",
    "intro35": "usw",

    "dhke": "Was ist DHKE?",
    "readDHKE": "Lesen Sie mehr über DHKE?",
    "yes": "Ja",
    "no": "Nein",

    "showCase0": "Gehen Sie einen Schritt nach vorne.",
    "showCase1": "Gehen Sie einen Schritt zurück.",
    "showCase2": "Blenden Sie das Beschreibungsfeld ein oder aus.",
    "showCase3": "Ändern Sie die Einstellungen der Anwendung.",
    "showCase4": "Setzen Sie die Szene zurück und beginnen Sie von vorne.",
    "showCase5": "Lassen Sie die App im automatischen Modus laufen.",
    "showCase6": "Darin befinden sich drei Knöpfe.",
    "showCase7": "Schrittnummer. Sie können diese Zahl drücken und den Schritt eingeben, zu dem Sie gehen möchten.",
    "showCase8": "In diesem Feld sehen Sie einige Erklärungen dazu, was auf dem Bildschirm passiert. (Sie können das Feld durch langes Drücken maximieren oder minimieren)",

    "outOfRangeError": "Bitte geben Sie eine gültige Nummer ein.",
    "goToStep": "Gehen Sie zu Schrittnummer:",

    "lastLeft": "Nichts mehr zu zeigen!",
    "lastLeft2": "Nichts mehr zu zeigen! Möchten Sie zur vorherigen Szene wechseln?",
    "lastRight": "Nichts mehr zu zeigen! Möchten Sie zur nächsten Szene wechseln?",
    "lastRight2": "Nichts mehr zu zeigen! Möchten Sie zur ersten Szene zurückkehren?",

    "slide1": "Grundlegende Idee des DHKE",
    "slide2": "Mathematische Grundlagen",
    "slide3": "Wie funktioniert das DHKE?",
    "slide4": "MitM-Angriff auf DHKE",
    "text1": "Die Grundidee kann mit Farben dargestellt werden (später werden wir sehen, wie es mit Zahlen funktioniert)",
    "text2": "Multiplikative Gruppe der ganzen Zahlen modulo n\n",
    "text31": "Diesmal mit Zahlen – mit kleinen Zahlen; DHKE verwendet real große Zahlen",
    "text321": "Alice wählt eine multiplikative Gruppe aus: n = ",
    "text322": "und eine Primitiv-Wurzel r = ",
    "text4": "Man-in-the-Middle-Angriff auf DHKE; Eve wird versuchen, den Schlüsselaustausch zwischen Alice und Bob zu blockieren",
    "slide1Item0": "Alice denkt an ihre erste Farbe, die gelb ist.",
    "slide1Item1": "Als Alice Bob von ihrer ersten Farbe erzählt, kann Eve ihr zuhören und kennt so auch die Farbe.",
    "slide1Item2": "Um zu verhindern, dass Eve wieder zuhört, denkt Alice an eine andere Farbe (rot) und Bob denkt auch an eine andere Farbe (türkis).",
    "slide1Item3": "Alice und Bob mischen die erste Farbe von Alice (gelb) mit den Farben, die sie sich jeweils als Zweites ausgedacht haben. Jetzt haben Alice und Bob eine neue Mischfarbe (Alice hat orange, Bob hat blau).",
    "slide1Item4": "Alice sendet ihre gemischte Farbe (orange) an Bob, und Bob sendet seine gemischte Farbe (blau) an Alice. Eve kann die Mischfarbe von beiden kennen, aber nicht die tatsächliche Farbe.",
    "slide1Item5": "Alice mischt Bobs gemischte Farbe (blau) mit ihrer zweiten Farbe (rot). Bob macht dasselbe, er mischt Alices Mischfarbe (orange) mit seiner zweiten Farbe (blau).",
    "slide1Item6": "Jetzt haben Alice und Bob die gleiche Ergebnisfarbe (dunkelgrün), von der Eve keine Ahnung hat.\nÜbertragen auf das kommende DHKE teilen Alice und Bob nun ein Geheimnis (die Ergebnisfarbe), von der Eve keine Ahnung hat, obwohl die alles mitschneiden konnte, worüber die beiden kommunizierten.",
    "slide3Item0": "Alice wählt die multiplikative Gruppe Z_n_* () aus. Und eine Primitiv-Wurzel (r).",
    "slide3Item1": "Alice teilt n und r mit Bob. Eve kennt damit die ausgewählten Zahlen.",
    "slide3Item2": "Alice wählt ihre Geheimzahl (s_A). Auch Bob wählt seine Geheimzahl(S_B) aus. Die Privatzahlen werden nicht ausgetauscht!",
    "slide3Item3": "Jetzt generieren Alice und Bob ihren öffentlichen Schlüssel ('a' für Alice und 'b' für Bob) mit Hilfe der Formel, die auf dem Bildschirm zu sehen ist.",
    "slide3Item4": "Alice und Bob tauschen die Werte ihrer öffentlichen Schlüssel (a und b) aus. Eve kann diese beiden Werte kennen.",
    "slide3Item5": "Jetzt generieren Alice und Bob den gemeinsamen geheimen Schlüssel (S) – mit den auf dem Bildschirm angezeigten Formeln.",
    "slide4Item0": "Alice wählt ihre Geheimzahl (s_A).",
    "slide4Item1": "Alice generiert ihren öffentlichen Schlüssel (a) mit Hilfe der Formel, die auf dem Bildschirm angezeigt wird.",
    "slide4Item2": "Jetzt will Alice ihren öffentlichen Schlüssel (a) mit Bob teilen. Eve blockiert die Übertragung von Alices öffentlichem Schlüssel und behält ihn für sich, ohne dass Alice oder Bob dies bemerken",
    "slide4Item3": "Eve wählt ihre erste Geheimzahl (s_EA).",
    "slide4Item4": "Eve generiert ihren öffentlichen Schlüssel (ea) mit Hilfe der Formel, die auf dem Bildschirm angezeigt wird.",
    "slide4Item5": "Nun teilt Eve ihren öffentlichen Schlüssel (ea) mit Alice. Alice wird denken, dass dieser öffentliche Schlüssel von Bob kommt.",
    "slide4Item6": "Nun generieren Alice und Eve den geheimen Schlüssel (S1) mit Hilfe der auf dem Bildschirm angezeigten Formeln.",
    "slide4Item7": "Bob wählt seine Geheimzahl (s_B).",
    "slide4Item8": "Bob generiert seinen öffentlichen Schlüssel (b) mit Hilfe der Formel, die auf dem Bildschirm angezeigt wird.",
    "slide4Item9": "Nun teilt Bob seinen öffentlichen Schlüssel (b) mit Alice. Eve blockiert die Übertragung von Bobs öffentlichem Schlüssel und behält ihn für sich, ohne dass Alice oder Bob dies bemerken.",
    "slide4Item10": "Eve wählt ihre zweite Geheimzahl (s_EB).",
    "slide4Item11": "Eve generiert ihren öffentlichen Schlüssel (eb) mit Hilfe der Formel, die auf dem Bildschirm angezeigt wird.",
    "slide4Item12": "Jetzt teilt Eve ihren öffentlichen Schlüssel (eb) mit Bob. Bob wird denken, dass dieser öffentliche Schlüssel von Alice kommt.",
    "slide4Item13": "Nun generieren Bob und Eve den geheimen Schlüssel (S2) mit Hilfe der auf dem Bildschirm angezeigten Formeln.",
    "slide4Item14": "Wenn Eve es schafft, die direkte Kommunikation zwischen Alice und Bob weiterhin zu unterbinden und über sich zu lenken, kann sie die gesamte Kommunikation mitlesen."
}